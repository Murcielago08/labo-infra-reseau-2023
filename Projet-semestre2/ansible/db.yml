---
- hosts: all
  become: yes

  vars_files:
    - vars.yml

  pre_tasks:
    - name: "Install packages"
      dnf: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server

    - name: "Install packages"
      yum : "name={{ item }} state=present"
      with_items:
        - python3-psycopg2
  
    # Additional task to create a dump.sql file with SQL commands
    - name: "Create dump.sql file"
      copy:
        content: |
          CREATE TABLE my_table (
              id SERIAL PRIMARY KEY,
              name VARCHAR(255)
          );
          INSERT INTO my_table (name) VALUES ('entry');
        dest: /tmp/dump.sql
      become: yes
      become_user: postgres

  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "test"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "test"
        password: "test"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "test"
        roles: "test"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "test"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    # Additional task to execute SQL commands to create table and add entry
    - name: "Execute SQL commands to create table and add entry"
      become: yes
      become_user: postgres
      shell: psql test < /tmp/dump.sql

    - name: "Open port 7290"
      firewalld:
        port: 7290/tcp
        permanent: yes
        state: enabled
        immediate: yes

    - name: "Change database port"
      lineinfile:
        path: /var/lib/pgsql/data/postgresql.conf
        regexp: '^#?port = .*'
        line: 'port = 7290'
      notify: restart postgres

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted
      become_user: postgres
